#!/bin/bash
# Gerrit hook script that gets called after a comment gets added :-) with the
# following parameters:
#
# comment-added --change <change id> --is-draft <boolean>
#     --change-url <change url> --change-owner <change owner>
#     --project <project name> --branch <branch> --topic <topic>
#     --author <comment author> --commit <commit> --comment <comment>
#     [--<approval category id> <score> --<approval category id> <score> ...]
#
# This script checks comment text to see if it is a comment that Jenkins made. It
# approves the platform specific verified categories.
# This is necessary since Jenkins puts all approvals into one category regardless of
# the settings if one event triggers multiple builds on the same server.

log() {
	echo $1 >> $GERRIT_SITE/logs/comment-added-hook
}

TEMP=$(getopt -o h --long change: --long is-draft: --long change-url: --long change-owner: --long project: --long branch: --long topic: --long author: --long commit: --long comment: --long CRVW: --long VRIF: --long VRLX: --long Verified: --long verified: --long Verified-Linux: --long verified-linux: --long Code-Review: --long code-review: -n '$(basename $0)' -- "$@")

eval set -- "$TEMP"

if [ $# -lt 19 ]; then
	NOAPPROVALS=1
fi

while true ; do
	case "$1" in
		--change) CHANGE_ID=$2 ;;
		--change-owner) ;;
		--change-url) CHANGE_URL=$2 ;;
		--project) PROJECT=$2 ;;
		--branch) BRANCH=$2 ;;
		--topic) TOPIC=$2 ;;
		--author) AUTHOR=$2 ;;
		--commit) COMMIT=$2 ;;
		--comment) MSG=$2 ;;
		--is-draft) ;;
		--CRVW) ;;
		--Code-Review) ;;
		--code-review) ;;
		--VRIF) ;;
		--Verified) ;;
		--verified) ;;
		--VRLX) ;;
		--Verified-Linux) ;;
		--verified-linux) ;;
		--) shift; break;;
		*) log "Internal error! Unknown parameter $1" ; exit 1 ;;
	esac
	shift 2
done

if [ $NOAPPROVAL ]; then
	# We don't have any approval categories - no relevant comment
	log "No approval categories (Change $CHANGE_ID)"
	exit 0
fi

STATUS_REGEX="Build (Started|Successful|Failed|Unstable)"
if ! [[ $MSG =~ $STATUS_REGEX ]]  ; then
	log "No build status related message (Change $CHANGE_ID)"
	exit 0
fi

if [[ $(git config -f $GERRIT_SITE/etc/gerrit.config httpd.listenUrl) =~ [^:]+:\/\/[^:]+:([0-9]+) ]]; then
	PORT=${BASH_REMATCH[1]}
else
	PORT=38081
fi

IFS=$'\n'
TOADDCAT=
TOADDMSG=
for line in $MSG; do
	case $line in
		*-Linux*)
			CATEGORY="Verified-Linux"
			CATMSG="Verified-Linux"
			;;
		*-Win*)
			CATEGORY="Verified"
			CATMSG="Verified"
			;;
	esac
	RESULT=$(echo $line | awk '{print $3}')
	case $RESULT in
		SUCCESS)
			VAL="1"
			;;
		FAILURE)
			VAL="-1"
			;;
		UNSTABLE)
			VAL="0"
			;;
		*)
			continue
			;;
	esac
	log "Adding review: $CATEGORY $VAL for commit $COMMIT"
	TOADDCAT="$TOADDCAT --label $CATEGORY=$VAL"
	TOADDMSG="$TOADDMSG $CATMSG $VAL"
done

if [ -n "$TOADDCAT" ]; then
	# Check if the parent project is *Crossplatform*
	JSON=$(curl --noproxy localhost --silent --show-error http://localhost:$PORT/projects/$PROJECT | tail -n +2)
	XPLAT=$($(dirname "$0")/getjson.py --readstring "parent" <<< $JSON)

	if ! [[ $XPLAT =~ Crossplatform ]] ; then
		log "Skipping; no crossplatform project"
		exit 0
	fi

	ssh -l "hooks" -p 59418 localhost -i $GERRIT_SITE/etc/ssh_host_ecdsa_key \
		suexec --as jenkins -- \
		gerrit review $TOADDCAT --project $PROJECT --notify NONE \
		--message "\"Automatically added by comment-added hook: $TOADDMSG \"" $COMMIT
fi
